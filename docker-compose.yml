services:
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "4200:80"

  service-registry:
    container_name: service_registry
    build: ./backend/service-registry
    ports:
      - "8761:8761"

  api-gateway:
    container_name: api_gateway
    build: ./backend/api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://service-registry:8761/eureka/

  auth-service:
    container_name: auth_service
    build: ./backend/auth-service
    ports:
      - "8081:8081"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.kafka.bootstrap-servers=kafka:9092
      - spring.security.jwt.secret=${JWT_SECRET}
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  user-service:
    container_name: user_service
    build: ./backend/user-service
    ports:
      - "8082:8082"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.kafka.bootstrap-servers=kafka:9092
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  store-service:
    container_name: store_service
    build: ./backend/store-service
    ports:
      - "8083:8083"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  product-service:
    container_name: product_service
    build: ./backend/product-service
    ports:
      - "8084:8084"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.kafka.bootstrap-servers=kafka:9092
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  order-service:
    container_name: order_service
    build: ./backend/order-service
    ports:
      - "8085:8085"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.kafka.bootstrap-servers=kafka:9092
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  cart-service:
    container_name: cart_service
    build: ./backend/cart-service
    ports:
      - "8086:8086"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  cloudinary-service:
    container_name: cloudinary_service
    build: ./backend/cloudinary-service
    ports:
      - "8087:8087"
    depends_on:
      - service-registry
      - postgres-db
    environment:
      - spring.datasource.url=jdbc:postgresql://postgres-db:5432/mercheazy
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/

  postgres-db:
    image: 'postgres:17'
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mercheazy

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper_service
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka_service
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
